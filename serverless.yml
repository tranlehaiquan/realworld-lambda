service: realworld-lambda
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    DYNAMODB_NAMESPACE: ${opt:stage, "dev"}
    JWT_TOKEN_KEY: ${env:jwt, "hello"}

# custom:
#   esbuild:
#     external: ['pg-native']

functions:
  signIn:
    handler: src/users/login.login
    events:
      - httpApi:
          path: /api/users/login
          method: post
  signUp:
    handler: src/users/register.register
    events:
      - httpApi:
          path: /api/users
          method: post
  whoAmI:
    handler: src/users/whoAmI.whoAmI
    events:
      - httpApi:
          path: /api/users/me
          method: post
  updateCurrentUser:
    handler: src/users/updateUser.updateUser
    events:
      - httpApi:
          path: /api/users/me
          method: put
  # getProfile:
  #   handler: src/profiles.getProfile
  #   events:
  #     - httpApi:
  #         path: /api/profiles/{username}
  #         method: get
  # followUser:
  #   handler: src/profiles.followUser
  #   events:
  #     - httpApi:
  #         path: /api/profiles/{username}/follow
  #         method: post
  # unFollowUser:
  #   handler: src/profiles.unFollowUser
  #   events:
  #     - httpApi:
  #         path: /api/profiles/{username}/follow
  #         method: delete
  # getArticles:
  #   handler: src/articles.getArticles
  #   events:
  #     - httpApi:
  #         path: /api/articles
  #         method: get
  # getFeed:
  #   handler: src/articles.getFeedArticles
  #   events:
  #     - httpApi:
  #         path: /api/articles/feed
  #         method: get
  # getArticle:
  #   handler: src/articles.getArticle
  #   events:
  #     - httpApi:
  #         path: /api/articles/{slug}
  #         method: get
  # createArticle:
  #   handler: src/articles.createArticle
  #   events:
  #     - httpApi:
  #         path: /api/articles
  #         method: post
  # updateArticle:
  #   handler: src/articles.updateArticle
  #   events:
  #     - httpApi:
  #         path: /api/articles/{slug}
  #         method: put
  # deleteArticle:
  #   handler: src/articles.deleteArticle
  #   events:
  #     - httpApi:
  #         path: /api/articles/{slug}
  #         method: delete
  # addComment:
  #   handler: src/articles.addCommentToArticle
  #   events:
  #     - httpApi:
  #         path: /api/articles/{slug}/comments
  #         method: post
  # getComments:
  #   handler: src/articles.getCommentsFromArticle
  #   events:
  #     - httpApi:
  #         path: /api/articles/{slug}/comments
  #         method: get
  # deleteComment:
  #   handler: src/articles.deleteComment
  #   events:
  #     - httpApi:
  #         path: /api/articles/{slug}/comments/{id}
  #         method: delete
  # favoriteArticle:
  #   handler: src/articles.favoriteArticle
  #   events:
  #     - httpApi:
  #         path: /api/articles/{slug}/favorite
  #         method: post
  # unFavoriteArticle:
  #   handler: src/articles.unFavoriteArticle
  #   events:
  #     - httpApi:
  #         path: /api/articles/{slug}/favorite
  #         method: delete
  # getTags:
  #   handler: src/articles.getTags
  #   events:
  #     - httpApi:
  #         path: /api/tags
  #         method: get
  
plugins:
  # - serverless-esbuild
  - serverless-plugin-typescript
  - serverless-offline
